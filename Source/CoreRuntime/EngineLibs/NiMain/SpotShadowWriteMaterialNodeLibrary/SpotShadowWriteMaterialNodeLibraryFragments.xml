<?xml version="1.0" encoding="utf-8" ?>
<library version="2">
<!--========================================================================-->
<fragment type="Pixel" name="WriteDepthToColor">
    <desc>
    This fragment writes projected depth to all color component outputs.
    </desc>
    <inputs>
        <resource type="float4" semantic="Position" label="Proj" 
            variable="WorldPosProjected" />
    </inputs>
    <outputs>
        <resource type="float4" semantic="Color" label="" 
            variable="OutputColor" />
    </outputs>
    <code lang="hlsl/Cg" platform="D3D11/D3D10/DX9/Xenon" 
          target="ps_2_0/ps_4_0/ps_5_0">
        
    float Depth = WorldPosProjected.z / WorldPosProjected.w;    
    OutputColor.x = Depth;
    OutputColor.yzw = 1.0f;
    </code>
    <code lang="hlsl/Cg" platform="PS3" target="ps_3_0">       
    float Depth = WorldPosProjected.z / WorldPosProjected.w;    
    
    // Rescale Depth from (-1.0)-(1.0) to (0.0)-(1.0)
    Depth = (Depth * 0.5) + 0.5;
    
    OutputColor.x = Depth;
    OutputColor.yzw = 1.0f;
    </code>    
</fragment>
<!--========================================================================-->
<fragment type="Pixel" name="WriteVSMDepthToColor">
    <desc>
    This fragment writes projected depth to all color component outputs.
    </desc>
    <inputs>
        <resource type="float4" semantic="Position" label="Proj" 
            variable="WorldPosProjected" />
    </inputs>
    <outputs>
        <resource type="float4" semantic="Color" label="" 
            variable="OutputColor" />
    </outputs>
    <code lang="hlsl/Cg" platform="D3D11/D3D10/DX9/Xenon" 
          target="ps_2_0/ps_4_0/ps_5_0">
    float Depth = WorldPosProjected.z / WorldPosProjected.w;
            
    OutputColor.x = Depth;
    OutputColor.y = Depth * Depth;
    OutputColor.zw = 1.0;
    </code>
    <code lang="hlsl/Cg" platform="PS3" target="ps_3_0">
    float Depth = WorldPosProjected.z / WorldPosProjected.w;

    // Rescale Depth from (-1.0)-(1.0) to (0.0)-(1.0)
    Depth = (Depth * 0.5) + 0.5;
            
    OutputColor.x = Depth;
    OutputColor.y = Depth * Depth;
    OutputColor.zw = 1.0;
    </code>    
</fragment>
<!--========================================================================-->
<fragment type="Vertex/Pixel" name ="TeeFloat4">
    <desc>
      This fragment splits and passes through a single float4 input into two
      float4 outputs.
    </desc>
    <inputs>
      <resource type="float4" semantic="" label="" variable="Input" />
    </inputs>
    <outputs>
      <resource type="float4" semantic="" label="" variable="Output1" />
      <resource type="float4" semantic="" label="" variable="Output2" />
    </outputs>
    <code lang="hlsl/Cg" platform="D3D11/D3D10/DX9/Xenon/PS3" 
          target="vs_1_1/ps_2_0/vs_4_0/ps_4_0/vs_5_0/ps_5_0">
      Output1 = Input;
      Output2 = Input;
    </code>
</fragment>
<!--========================================================================-->
</library>
